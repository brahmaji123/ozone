---
- name: Update Cloudera Manager Service DB Configs with Multiple Passwords
  hosts: cm_server
  vars_files:
    - ../inventories/production/group_vars/cm_servers.yml
  tasks:
    - name: Get CM API auth token
      uri:
        url: "https://{{ cm_host }}:7183/api/v40/auth/signin"
        method: POST
        body_format: json
        body:
          username: "{{ cm_admin_user }}"
          password: "{{ cm_admin_password }}"
        validate_certs: no
        status_code: 200
      register: auth_result
      no_log: true
      delegate_to: localhost

    - name: Set auth token
      set_fact:
        cm_api_token: "{{ auth_result.json.token }}"
      no_log: true

    # Group 1: Services using primary_db_password (Hive, Hue, Oozie, Reports Manager, YARN)
    - name: Update primary password services
      uri:
        url: "{{ item.url }}"
        method: PUT
        headers:
          Authorization: "Bearer {{ cm_api_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          items:
            - name: "{{ item.config_key }}"
              value: "{{ primary_db_password }}"
              sensitive: true
        validate_certs: no
        status_code: 200
      loop:
        - { url: "https://{{ cm_host }}:7183/api/v40/clusters/{{ cluster_name }}/services/hive/roleConfigGroups/hive-HIVEMETASTORE-BASE/config", config_key: "hive_metastore_database_password" }
        - { url: "https://{{ cm_host }}:7183/api/v40/clusters/{{ cluster_name }}/services/hue/roleConfigGroups/hue-HUE_SERVER-BASE/config", config_key: "database_password" }
        - { url: "https://{{ cm_host }}:7183/api/v40/clusters/{{ cluster_name }}/services/oozie/roleConfigGroups/oozie-OOZIE_SERVER-BASE/config", config_key: "oozie_database_password" }
        - { url: "https://{{ cm_host }}:7183/api/v40/clusters/{{ cluster_name }}/services/yarn/roleConfigGroups/yarn-RESOURCEMANAGER-BASE/config", config_key: "yarn_resourcemanager_store_password" }
        - { url: "https://{{ cm_host }}:7183/api/v40/cm/service/roleConfigGroups/reportsmanager-REPORTSMANAGER_SERVER-BASE/config", config_key: "headlamp_database_password" }
      no_log: true
      register: primary_updates
      until: primary_updates is succeeded
      retries: 3
      delay: 10

    # Group 2: Services using secondary_db_password (Ranger, Ranger KMS, NiFi Registry)
    - name: Update secondary password services
      uri:
        url: "{{ item.url }}"
        method: PUT
        headers:
          Authorization: "Bearer {{ cm_api_token }}"
          Content-Type: "application/json"
        body_format: json
        body:
          items:
            - name: "{{ item.config_key }}"
              value: "{{ secondary_db_password }}"
              sensitive: true
        validate_certs: no
        status_code: 200
      loop:
        - { url: "https://{{ cm_host }}:7183/api/v40/clusters/{{ cluster_name }}/services/ranger/roleConfigGroups/ranger-RANGER_ADMIN-BASE/config", config_key: "db_password" }
        - { url: "https://{{ cm_host }}:7183/api/v40/clusters/{{ cluster_name }}/services/rangerkms/roleConfigGroups/rangerkms-RANGER_KMS_SERVER-BASE/config", config_key: "db_password" }
        - { url: "https://{{ cm_host }}:7183/api/v40/clusters/{{ cluster_name }}/services/nifiregistry/roleConfigGroups/nifiregistry-NIFI_REGISTRY_SERVER-BASE/config", config_key: "nifi.registry.db.password" }
      no_log: true
      register: secondary_updates
      until: secondary_updates is succeeded
      retries: 3
      delay: 10
