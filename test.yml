---
- name: Update pg_hba.conf with LDAP authentication
  hosts: postgres_servers
  vars:
    pg_hba_path: "/var/lib/pgsql/data/pg_hba.conf"  # Adjust to your PostgreSQL version/path
    ldap_config_line: "host all all 0.0.0.0/0 ldap ldapserver=ldap.example.com ldapport=389 ldapprefix=\"uid=\" ldapsuffix=\",ou=users,dc=example,dc=com\" ldapbinddn=\"{{ ldap_binddn }}\" ldapbindpasswd=\"{{ ldap_bindpassword }}\""

  tasks:
    # Retrieve LDAP credentials (assuming you have tasks that set these variables)
    - name: Ensure LDAP credentials are available
      assert:
        that:
          - ldap_binddn is defined
          - ldap_bindpassword is defined
        fail_msg: "LDAP credentials not available. Make sure service ID retrieval tasks ran first."

    # Backup original file
    - name: Create backup of pg_hba.conf
      ansible.builtin.copy:
        src: "{{ pg_hba_path }}"
        dest: "{{ pg_hba_path }}.bak-{{ ansible_date_time.iso8601 }}"
      become: yes

    # Remove existing LDAP line if it exists
    - name: Remove existing LDAP configuration
      ansible.builtin.lineinfile:
        path: "{{ pg_hba_path }}"
        regexp: '^host all all .* ldap .*$'
        state: absent
      become: yes

    # Insert new LDAP configuration
    - name: Add new LDAP configuration
      ansible.builtin.lineinfile:
        path: "{{ pg_hba_path }}"
        line: "{{ ldap_config_line }}"
        insertafter: '^# IPv4 local connections:'
        state: present
      become: yes
      no_log: true  # Don't log the line containing credentials

    # Reload PostgreSQL configuration
    - name: Reload PostgreSQL configuration
      ansible.builtin.service:
        name: postgresql  # May vary based on your OS/PostgreSQL version
        state: reloaded
      become: yes
