pgstatus() {
    # Define clusters with special hget modes
    declare -A cluster_modes=(
        [uatpdp]="-M"
        [uat1pdp]="-M"
        [drpdp]="-C"
        [prodpdp]="-C"
        # All others will use default "hget env"
    )

    # List of all valid clusters
    all_clusters=(iapdp devpdp uatpdp uat1pdp dev1pdp drpdp prodpdp)

    echo "Available clusters: ${all_clusters[*]}"
    read -p "Enter cluster(s) (comma-separated): " input_clusters

    # Process each cluster
    IFS=',' read -ra clusters <<< "$input_clusters"
    for cluster in "${clusters[@]}"; do
        cluster=$(echo "$cluster" | xargs)  # Trim whitespace

        # Validate cluster
        if [[ " ${all_clusters[*]} " != *" $cluster "* ]]; then
            echo -e "\n[ERROR] Invalid cluster: $cluster (Skipping)"
            continue
        fi

        # Determine hget command
        mode="${cluster_modes[$cluster]}"
        if [[ -n "$mode" ]]; then
            hget_cmd="hget $mode env $cluster"
        else
            hget_cmd="hget env $cluster"  # Default mode
        fi

        # Execute and display results
        echo -e "\n======= Cluster: $cluster ======="
        echo "Command: $hget_cmd"
        if ! $hget_cmd | rpusshq "systemctl status postgresql@psqld{1,2,3}" | grep active; then
            echo "[WARNING] Failed to get status for $cluster"
        fi
    done
}
